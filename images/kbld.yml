#@ load("@ytt:data", "data")
#@ load("@ytt:struct", "struct")
---
apiVersion: kbld.k14s.io/v1alpha1
kind: Config

sources:
#! Eirini images
#@ eirini = struct.decode(data.values.eirini)
#@ for key in eirini:
  #@ subcomponent = struct.encode(eirini[key])
  - imageRepo: #@ subcomponent.image_repository
    path: #@ subcomponent.source_path
    docker:
      build:
        file: #@ subcomponent.dockerfile
        buildkit: true
        rawOptions: ["--build-arg", "GIT_SHA=12345"]
#@ end

#! UAA images
#@ uaa = data.values.uaa
  - imageRepo: #@ uaa.uaa.image_repository
    path: #@ uaa.uaa.source_path
    pack:
      build:
        builder: #@ uaa.uaa.builder
        rawOptions: ["--env", "BP_GRADLE_BUILT_MODULE=uaa"]

#! CAPI images
#@ capi = data.values.capi
  - imageRepo: #@ capi.cloud_controller_ng.image_repository
    path: #@ capi.cloud_controller_ng.source_path
    pack:
      build:
        builder: paketobuildpacks/builder:full
        buildpacks:
          - gcr.io/paketo-community/ruby
